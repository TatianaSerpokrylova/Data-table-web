{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaserpokrylova/Documents/Learning/JS/react-app/data_table/src/components/data-table/data-table.js\";\nimport React, { Component } from 'react';\nimport './data-table.css';\nimport '../add-panel';\nimport AddPanel from '../add-panel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DataTable extends Component {\n  constructor(props) {\n    super(props);\n    //выделение элемента таблицы цветом\n    this.selectedItem = (event, itemId) => {\n      this.setState(_ref => {\n        let {\n          item\n        } = _ref;\n        return {\n          mark: !this.state.mark,\n          selectedItem: itemId\n        };\n      });\n      console.log(\"сейчас выбран\", itemId);\n    };\n    //удаление строки из таблицы\n    this.deleteItem = id => {\n      const updatedItem = this.state.item.filter(item => item.id !== this.state.selectedItem);\n      this.setState(_ref2 => {\n        let {\n          item\n        } = _ref2;\n        return {\n          item: updatedItem\n        };\n      });\n    };\n    //добавление данных в таблицу\n    this.addItem = newItem => {\n      const currentItem = this.state.item; //массив данных до добавления элемента\n      const newItemWithId = {\n        ...newItem,\n        id: Math.max(...currentItem.map(el => el.id)) + 1\n      };\n      console.log(\"newItemWithId=\", newItemWithId);\n      //чтобы не вводились пустые ячейки, просим пользователя ввести все данные\n      if (!newItemWithId.first_name || !newItemWithId.birthday) {\n        alert(\"Пожалуйста, введите все данные\");\n      } else this.setState(_ref3 => {\n        let {\n          item\n        } = _ref3;\n        return {\n          item: [...item, newItemWithId],\n          selectedItem: newItemWithId.id\n        };\n      });\n    };\n    //редактирование данных\n    this.redactItem = updatedItem => {\n      const currentItem = this.state.item; //массив данных до изменения элемента\n      currentItem.forEach(el => {\n        if (el.id === updatedItem.id) {\n          el.first_name = updatedItem.first_name;\n          el.birthday = updatedItem.birthday;\n          el.accumulated_points = updatedItem.accumulated_points;\n        }\n        ;\n      });\n      this.setState(_ref4 => {\n        let {\n          item\n        } = _ref4;\n        return {\n          item: currentItem\n        };\n      });\n    };\n    this.state = {\n      item: [],\n      //массив данных\n      isLoaded: false,\n      //статус загрузки\n      mark: false,\n      //статус выделения цветом\n      itenIdPrevious: false,\n      selectedItem: null,\n      //id выделенного элемента\n      testItems: [\n      //массив данных на случай, когда число запросов с сервера превысило 200 раз в день\n      {\n        id: 1,\n        first_name: \"Denver\",\n        last_name: \"Broadway\",\n        birthday: \"13.02.1970\",\n        accumulated_points: 884\n      }, {\n        id: 2,\n        first_name: \"Tremain\",\n        last_name: \"Allenson\",\n        birthday: \"26.07.1985\",\n        accumulated_points: 104\n      }, {\n        id: 3,\n        first_name: \"Blaire\",\n        last_name: \"Hoofe\",\n        birthday: \"21.08.1979\",\n        accumulated_points: 916\n      }, {\n        id: 4,\n        first_name: \"Alyson\",\n        last_name: \"Rawdales\",\n        birthday: \"03.02.1968\",\n        accumulated_points: 987\n      }, {\n        id: 5,\n        first_name: \"Concettina\",\n        last_name: \"Frissell\",\n        birthday: \"06.09.1999\",\n        accumulated_points: 206\n      }]\n    };\n  }\n  //получение данных с сервера\n  componentDidMount() {\n    fetch('https://my.api.mockaroo.com/shop_customers.json?key=032062d0').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        item: json\n      });\n    });\n  }\n  render() {\n    let {\n      item,\n      isLoaded,\n      mark,\n      selectedItem\n    } = this.state;\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container row row-cols-1\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-center\",\n          children: \"'Loading data..'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this);\n    }\n    //если с сервера пришло сообщение об ошибке, используется локально определенный массив\n    if (item.error) {\n      this.setState(_ref5 => {\n        let {\n          item\n        } = _ref5;\n        return {\n          item: this.state.testItems\n        };\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container  \",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"without-padding\",\n          children: item.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: ` ${this.state.mark && item.id === selectedItem ? 'one-list-marked' : 'one-list'}`,\n            onClick: e => this.selectedItem(e, item.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-id\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" \", item.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-name\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" \", item.first_name, \" \", item.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-birthday\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" \", item.birthday]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-points\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" \", item.accumulated_points]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPanel, {\n          onDelete: () => {\n            this.deleteItem(selectedItem);\n          } //удаление\n          ,\n          onAddNewItem: this.addItem //добавление\n          ,\n          onRedactItem: this.redactItem //редактирование\n          ,\n          id: selectedItem,\n          item: item.find(item => item.id === selectedItem) //выделенный элемент таблицы\n          ,\n          mark: mark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}","map":{"version":3,"names":["React","Component","AddPanel","jsxDEV","_jsxDEV","DataTable","constructor","props","selectedItem","event","itemId","setState","_ref","item","mark","state","console","log","deleteItem","id","updatedItem","filter","_ref2","addItem","newItem","currentItem","newItemWithId","Math","max","map","el","first_name","birthday","alert","_ref3","redactItem","forEach","accumulated_points","_ref4","isLoaded","itenIdPrevious","testItems","last_name","componentDidMount","fetch","then","res","json","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","error","_ref5","onClick","e","onDelete","onAddNewItem","onRedactItem","find"],"sources":["/Users/tatanaserpokrylova/Documents/Learning/JS/react-app/data_table/src/components/data-table/data-table.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport './data-table.css';\nimport '../add-panel'\nimport AddPanel from '../add-panel';\n\n\n\nexport default class DataTable extends Component {\n    constructor (props){\n        super(props);\n        this.state={\n            item:[],                 //массив данных\n            isLoaded:false,          //статус загрузки\n            mark:false,              //статус выделения цветом\n            itenIdPrevious:false,\n            selectedItem: null,      //id выделенного элемента\n            testItems : [            //массив данных на случай, когда число запросов с сервера превысило 200 раз в день\n                {id:1, first_name:\"Denver\",last_name:\"Broadway\",birthday:\"13.02.1970\",accumulated_points:884},\n                {id:2,first_name:\"Tremain\",last_name:\"Allenson\",birthday:\"26.07.1985\",accumulated_points:104},\n                {id:3,first_name:\"Blaire\",last_name:\"Hoofe\",birthday:\"21.08.1979\",accumulated_points:916},\n                {id:4,first_name:\"Alyson\",last_name:\"Rawdales\",birthday:\"03.02.1968\",accumulated_points:987},\n                {id:5,first_name:\"Concettina\",last_name:\"Frissell\",birthday:\"06.09.1999\",accumulated_points:206}]\n        };\n    }\n\n\n    //выделение элемента таблицы цветом\n    selectedItem = (event, itemId) => {\n        \n        this.setState(({item}) => ({\n            mark: !this.state.mark,\n            selectedItem: itemId\n        }));\n        console.log(\"сейчас выбран\", itemId);\n    }\n\n    //удаление строки из таблицы\n    deleteItem = (id) => {\n        const updatedItem = this.state.item.filter((item) => item.id !== this.state.selectedItem);\n        this.setState(({item})=>{\n            return {item: updatedItem}\n        });\n    };\n\n    //добавление данных в таблицу\n    addItem = (newItem) =>{\n        const currentItem = this.state.item; //массив данных до добавления элемента\n        const newItemWithId = {\n            ...newItem,\n            id: Math.max(...currentItem.map(el => el.id)) + 1,\n        }; \n        console.log(\"newItemWithId=\",newItemWithId);\n        //чтобы не вводились пустые ячейки, просим пользователя ввести все данные\n        if ((!newItemWithId.first_name)||(!newItemWithId.birthday)) {\n            alert(\"Пожалуйста, введите все данные\")\n        } else                                 \n            this.setState(({item}) => ({\n                item: [...item, newItemWithId],\n                selectedItem: newItemWithId.id\n            }));    \n    };\n\n    //редактирование данных\n    redactItem = (updatedItem) => {\n        const currentItem = this.state.item; //массив данных до изменения элемента\n        currentItem.forEach(el => {\n            if (el.id === updatedItem.id) {\n                el.first_name=updatedItem.first_name;\n                el.birthday=updatedItem.birthday;\n                el.accumulated_points=updatedItem.accumulated_points;\n            };\n        })\n        this.setState(({item})=>{\n            return {item: currentItem}\n        });\n\n    }\n    \n\n    //получение данных с сервера\n    componentDidMount () {\n            fetch('https://my.api.mockaroo.com/shop_customers.json?key=032062d0')\n                .then(res=>res.json())\n                .then(json=>{\n                    this.setState({\n                        isLoaded:true,\n                        item:json,\n                    })\n                });\n    }\n\n    \n\n    render() { \n        let {item, isLoaded,mark, selectedItem} = this.state;\n        if (!isLoaded){\n            return (\n                <div className='container row row-cols-1'> \n                    <span className='text-center'>'Loading data..'</span>\n                </div>\n            )\n        }\n        //если с сервера пришло сообщение об ошибке, используется локально определенный массив\n        if (item.error) {\n            this.setState(({item})=>{\n                return {item: this.state.testItems}\n            });\n        }\n        else{\n            return (\n                <div className='container  ' >\n                    <ul className='without-padding' >\n                        {item.map(item => (\n                            <div  \n                            className={` ${\n                                ((this.state.mark)&&(item.id === selectedItem)) ? 'one-list-marked' : 'one-list'}`} \n                            onClick={(e) => this.selectedItem(e, item.id)}>\n                                <div className='list-id'>\n                                    <li> {item.id}</li>\n                                </div>\n                                <div className='list-name' >\n                                    <li> {item.first_name} {item.last_name}</li> \n                                </div>\n                                <div className='list-birthday'>\n                                    <li> {item.birthday}</li>\n                                </div>\n                                <div className='list-points'>\n                                    <li> {item.accumulated_points}</li>\n                                </div>\n                                \n                            </div>\n                        ))}\n                        </ul>\n                        <AddPanel \n                            onDelete={() =>{ this.deleteItem(selectedItem) }} //удаление\n                            onAddNewItem={this.addItem}                       //добавление\n                            onRedactItem={this.redactItem}                    //редактирование\n                            id={selectedItem}                                 \n                            item={item.find(item => item.id === selectedItem)} //выделенный элемент таблицы\n                            mark={mark}\n                        />\n                </div>\n            );\n        }  \n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}