{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaserpokrylova/Documents/Learning/JS/react-app/data_table/src/components/data-table/data-table.js\";\nimport React, { Component } from 'react';\nimport './data-table.css';\nimport '../add-panel';\nimport AddPanel from '../add-panel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.selectedItem = (event, itemId) => {\n      this.setState(_ref => {\n        let {\n          mark\n        } = _ref;\n        return {\n          mark: !mark\n        };\n      });\n      this.setState(_ref2 => {\n        let {\n          selectedItem\n        } = _ref2;\n        return {\n          selectedItem: itemId\n        };\n      });\n    };\n    this.deleteItem = id => {\n      const updatedItem = this.state.item.filter(item => item.id !== this.state.selectedItem);\n      this.setState(_ref3 => {\n        let {\n          item\n        } = _ref3;\n        return {\n          item: updatedItem\n        };\n      });\n    };\n    this.addItem = newItem => {\n      const currentItem = this.state.item; //массив данных до добавления элемента\n      const newItemWithId = {\n        ...newItem,\n        id: Math.max(...currentItem.map(el => el.id)) + 1\n      };\n      this.setState(_ref4 => {\n        let {\n          item\n        } = _ref4;\n        return {\n          item: [...item, newItemWithId],\n          selectedItem: newItemWithId.id\n        };\n      });\n    };\n    this.redItem = () => {};\n    this.state = {\n      item: [],\n      //массив данных\n      isLoaded: false,\n      //статус\n      mark: false,\n      selectedItem: null\n    };\n  }\n  componentDidMount() {\n    fetch('https://my.api.mockaroo.com/shop_customers.json?key=032062d0').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        item: json\n      });\n    });\n  }\n  render() {\n    let {\n      isLoaded,\n      item,\n      newItem,\n      selectedItem,\n      mark\n    } = this.state;\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container row row-cols-1\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-center\",\n          children: \"'Loading data..'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container  \",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"without-padding\",\n          children: item.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: ` ${!this.state.mark && item.id === selectedItem ? 'one-list-marked' : 'one-list'}`,\n            onClick: e => this.selectedItem(e, item.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-id\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" \", item.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-name\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" \", item.first_name, \" \", item.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-birthday\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" \", item.birthday]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-points\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" \", item.accumulated_points]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPanel, {\n          onDelete: () => {\n            this.deleteItem(selectedItem);\n          },\n          onAddNewItem: this.addItem,\n          id: selectedItem,\n          item: item.find(item => item.id === selectedItem) //выделенный элемент таблицы\n          ,\n          mark: mark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}","map":{"version":3,"names":["React","Component","AddPanel","jsxDEV","_jsxDEV","DataTable","constructor","props","selectedItem","event","itemId","setState","_ref","mark","_ref2","deleteItem","id","updatedItem","state","item","filter","_ref3","addItem","newItem","currentItem","newItemWithId","Math","max","map","el","_ref4","redItem","isLoaded","componentDidMount","fetch","then","res","json","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","first_name","last_name","birthday","accumulated_points","onDelete","onAddNewItem","find"],"sources":["/Users/tatanaserpokrylova/Documents/Learning/JS/react-app/data_table/src/components/data-table/data-table.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport './data-table.css';\nimport '../add-panel'\nimport AddPanel from '../add-panel';\n\n\n\nexport default class DataTable extends Component {\n    constructor (props){\n        super(props);\n        this.state={\n            item:[],          //массив данных\n            isLoaded:false,    //статус\n            mark:false,\n            selectedItem: null,\n        };\n    }\n\n    selectedItem = (event, itemId) => {\n        this.setState(({mark}) => {\n            return { mark: !mark }\n        })\n        this.setState(({selectedItem})=>{\n            return {selectedItem: itemId}\n        });\n    }\n\n    deleteItem = (id) => {\n        const updatedItem = this.state.item.filter((item) => item.id !== this.state.selectedItem);\n        this.setState(({item})=>{\n            return {item: updatedItem}\n        });\n    };\n\n    addItem = (newItem) =>{\n        const currentItem = this.state.item; //массив данных до добавления элемента\n        const newItemWithId = {\n            ...newItem,\n            id: Math.max(...currentItem.map(el => el.id)) + 1,\n        };                                  \n        this.setState(({item}) => ({\n            item: [...item, newItemWithId],\n            selectedItem: newItemWithId.id\n        }));    \n    };\n\n    redItem = () => {\n\n    }\n    \n\n    componentDidMount(){\n        fetch('https://my.api.mockaroo.com/shop_customers.json?key=032062d0')\n        .then(res=>res.json())\n        .then(json=>{\n            this.setState({\n                isLoaded:true,\n                item:json,\n            })\n        });\n        \n    }\n\n    \n\n    render() { \n        let {isLoaded, item, newItem, selectedItem, mark} = this.state;\n\n        if (!isLoaded){\n            return (\n                <div className='container row row-cols-1'> \n                    <span className='text-center'>'Loading data..'</span>\n                </div>\n            )\n        }\n\n        else{\n            return (\n                <div className='container  ' >\n                    <ul className='without-padding' >\n                        {item.map(item => (\n                            <div  \n                            className={` ${\n                                ((!this.state.mark)&&(item.id === selectedItem)) ? 'one-list-marked' : 'one-list'}`} \n                            onClick={(e) => this.selectedItem(e, item.id)}>\n                                <div className='list-id'>\n                                    <li> {item.id}</li>\n                                </div>\n                                <div className='list-name' >\n                                    <li> {item.first_name} {item.last_name}</li> \n                                </div>\n                                <div className='list-birthday'>\n                                    <li> {item.birthday}</li>\n                                </div>\n                                <div className='list-points'>\n                                    <li> {item.accumulated_points}</li>\n                                </div>\n                                \n                            </div>\n                        ))}\n                        </ul>\n                        <AddPanel \n                            onDelete={() =>{ this.deleteItem(selectedItem) }}\n                            onAddNewItem={this.addItem}\n                            id={selectedItem}\n                            item={item.find(item => item.id === selectedItem)} //выделенный элемент таблицы\n                            mark={mark}\n                        />\n                </div>\n            );\n        }  \n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}