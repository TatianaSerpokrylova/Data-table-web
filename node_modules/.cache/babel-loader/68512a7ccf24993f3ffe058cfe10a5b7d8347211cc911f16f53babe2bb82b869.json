{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaserpokrylova/Documents/Learning/JS/react-app/data_table/src/components/data-table.js\";\nimport React from 'react';\nimport PointsOfTable from './points-of-table';\nimport './data-table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = _ref => {\n  let {\n    datas\n  } = _ref;\n  // Превратим массив объектов в массив JSX-компонентов\n  // строка {...item} равносильна строке label ={item.label} important ={item.important}. То есть мы разделяем item на свойства и передаем их как значение компоента PointsOfTable\n  const elements = datas.map(item => {\n    const {\n      id,\n      ...otherItem\n    } = item;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: /*#__PURE__*/_jsxDEV(PointsOfTable, {\n        ...otherItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group  dats-table\",\n    children: elements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","PointsOfTable","jsxDEV","_jsxDEV","DataTable","_ref","datas","elements","map","item","id","otherItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tatanaserpokrylova/Documents/Learning/JS/react-app/data_table/src/components/data-table.js"],"sourcesContent":["import React from 'react';\nimport PointsOfTable from './points-of-table';\nimport './data-table.css';\n\n\nconst DataTable = ({datas})=> {\n    // Превратим массив объектов в массив JSX-компонентов\n    // строка {...item} равносильна строке label ={item.label} important ={item.important}. То есть мы разделяем item на свойства и передаем их как значение компоента PointsOfTable\n    const elements = datas.map ((item) => {\n        const {id, ...otherItem} = item;\n        return (\n            <li key={id} className='list-group-item'>\n            <PointsOfTable {...otherItem}  />\n            </li>) \n    })\n    return (\n        <ul className='list-group  dats-table'>\n        {elements}\n        </ul>\n    );\n};\nexport default DataTable;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,SAAS,GAAGC,IAAA,IAAY;EAAA,IAAX;IAACC;EAAK,CAAC,GAAAD,IAAA;EACtB;EACA;EACA,MAAME,QAAQ,GAAGD,KAAK,CAACE,GAAG,CAAGC,IAAI,IAAK;IAClC,MAAM;MAACC,EAAE;MAAE,GAAGC;IAAS,CAAC,GAAGF,IAAI;IAC/B,oBACIN,OAAA;MAAaS,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eACxCV,OAAA,CAACF,aAAa;QAAA,GAAKU;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK,GADxBP,EAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEN;EACb,CAAC,CAAC;EACF,oBACId,OAAA;IAAIS,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACrCN;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEb,CAAC;AAACC,EAAA,GAfId,SAAS;AAgBf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}